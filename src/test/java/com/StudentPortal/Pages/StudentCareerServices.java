package com.StudentPortal.Pages;

import static com.framework.elements.Locator.byId;
import static com.framework.elements.Locator.byXPath;
import static com.framework.elements.Locator.byName;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import javax.xml.crypto.Data;

import org.apache.tools.ant.taskdefs.MacroDef.Text;
import org.openqa.selenium.By.ByName;

import com.framework.base.BasePage;
import com.framework.elements.AngDropDown;
import com.framework.elements.Button;
import com.framework.elements.Checkbox;
import com.framework.elements.CustomAsserts;
import com.framework.elements.Link;
import com.framework.elements.TextField;
import com.framework.util.StringHash;

public class StudentCareerServices extends BasePage {

	//Web Placements Internships Page Web Elements	
	static Button FilterDropDwon = new Button("Click Filter Drop Down", byXPath("(//a[@class=\"k-button k-split-button-arrow\"])[1]"));
	static Button ClearFiltersButton = new Button("Click Filter Button", byId("listClearFiltersButton"));
	static AngDropDown StuNumDropDown = new AngDropDown("Click Student Number Dropdown", byXPath("//th[2]/a/span"));
	static Button StuNumFilter = new Button("Click Stud Num Filter", byXPath("//span[.=\"Filter\"]"));
	static TextField value = new TextField("Enter Value", byXPath("//input[@title=\"Value\"]"));
	static Button FilterButton = new Button("Click Filter Button", byXPath("//button[text()=\"Filter\"]"));
//	static Link ClickStudent = new Link("Click Student Name",byXPath("//span[.=\"Harris, Colette\"]"));
	static Link CareerServices = new Link("CLick Services", byXPath("(//li[@ng-repeat=\"group in $ctrl.tileGroups track by $index\"])[4]"));
	static Link PlacementsIntern = new Link("Click placements Intern", byXPath("//span[.=\"Placements & Internships\"]"));
	static Link ClickNew = new Link("Click New",byId("studentPlacementNewButton"));
	static Link ClickEmployer = new Link("Click Employer", byId("search_display_employerSearch"));
	static TextField EnterEmployer = new TextField("Enter Employer", byId("search"));
//	Checkbox SelectEmployer = new Checkbox("Click Employer", byXPath("//input[@aria-label='"+data.get("Campus")+"']"));
	static Button Select = new Button("Click Select", byXPath("//button[.=\"Select\"]"));
	static TextField PlacementStatus = new TextField("Enter Placement Status", byXPath("//input[@name=\"placementStatus_input\"]"));
	static Button JobCategory = new Button("Click Job Category", byXPath("//input[@name=\"jobCategory_input\"]"));
	static TextField JobType = new TextField("Enter Job Type", byXPath("//input[@name=\"jobType_input\"]"));
	static TextField FiledOfStudy = new TextField("Enter Field of Student", byXPath("//input[@name=\"inFieldOfStudy_input\"]"));
	static TextField HowPlaced = new TextField("Enter How Placed", byXPath("//input[@name=\"howPlaced_input\"]"));
	static TextField SalaryAmount = new TextField("Enter Salary Amount", byXPath("(//input[@aria-label=\"Salary Amount\"])[1]"));
	static TextField SalaryStatus = new TextField("Enter Salary Status", byXPath("//input[@name=\"salaryOption_input\"]"));
	static TextField SalaryType = new TextField("Enter Salary Type", byXPath("//input[@name=\"salaryType_input\"]"));
	static TextField JobTitle = new TextField("Enter Job Title", byXPath("//input[@name=\"jobTitle_input\"]"));
	static TextField DatePlaced = new TextField("Enter Date Placed", byId("datePlaced"));
	static TextField StartDate = new TextField("Enter Start Date", byId("startDate"));
	static Button SaveClose = new Button("Click Save and Close", byXPath("(//button[@aria-label=\"Save & Close\"])[2]"));
	
	
	public StudentCareerServices AddStudentIntoJob(StringHash data) throws Exception {
		
		Checkbox SelectEmployer = new Checkbox("Click Employer", byXPath("//input[@aria-label='"+data.get("Employer")+"']"));
		Button ClickUserName = new Button("Click UserName", byXPath("//a[.='"+data.get("Employer")+"']"));
		Link ClickStudent = new Link("Click Student Name",byXPath("//span[.='"+data.get("Student Name")+"']"));
		Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Placement records were successfully saved.']"));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		
    	waitForPageToComplete();
    	wait(10);
    	FilterDropDwon.click();
    	wait(2);
    	ClearFiltersButton.click();
    	wait(2);
    	StuNumDropDown.click();
    	wait(2);
    	StuNumFilter.click();
    	wait(2);
    	value.clearAndType(data.get("Student Number"));
    	wait(2);
    	FilterButton.click();
    	wait(4);
    	ClickStudent.click();
    	wait(10);
    	waitForPageToLoad();
    	CareerServices.waitTillElementClickable();
    	CareerServices.click();
    	wait(2);
    	PlacementsIntern.click();
    	wait(2);
    	ClickNew.waitTillElementFound();
    	ClickNew.click();
    	wait(3);
    	scrollPage(0, 500);
    	wait(2);
    	ClickEmployer.waitTillElementClickable();
    	ClickEmployer.click();
    	wait(2);
    	EnterEmployer.sendKeys(data.get("Employer"));
    	wait(5);
    	SelectEmployer.click();
    	wait(2);
    	Select.waitTillElementClickable();
    	Select.click();
    	wait(4);
    	JobType.clearAndType(data.get("Job Type"));
    	wait(2);
    	JobCategory.click();
    	wait(2);
    	PlacementStatus.sendKeys(data.get("Placement Status"));
    	wait(2);
    	JobCategory.click();
    	wait(2);
    	scrollPage(0, 200);
    	wait(2);
    	JobTitle.clearAndType(data.get("Job Title"));
    	wait(2);
    	scrollPage(0, 300);
    	wait(2);
    	FiledOfStudy.clearAndType(data.get("Field Of Studeny"));
    	wait(2);	
    	HowPlaced.clearAndType(data.get("How Placed"));
    	wait(2);
    	SalaryAmount.clearAndType(data.get("Salary Amount"));
    	wait(2);
    	SalaryStatus.clearAndType(data.get("Salary Status"));
    	wait(2);
    	SalaryType.clearAndType(data.get("Salary Type"));
    	wait(2);
    	DatePlaced.clearAndType(data.get("Date Placed"));
    	wait(2);
    	StartDate.clearAndType(data.get("Start Date"));
    	wait(2);
    	scrollPage(0, -1200);  
    	wait(4);
    	SaveClose.click();
    	wait(10);  
    	CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
		wait(10);
		return this;
	}
	//For this test case, the student should be in Graduate Status
	public StudentCareerServices PlaceGraduateStudentIntoInternship(StringHash data) throws Exception {
	
		Checkbox SelectEmployer = new Checkbox("Click Employer", byXPath("//input[@aria-label='"+data.get("Employer")+"']"));
		Button ClickUserName = new Button("Click UserName", byXPath("//a[.='"+data.get("Employer")+"']"));
		Link ClickStudent = new Link("Click Student Name",byXPath("//span[.='"+data.get("Student Name")+"']"));
		Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Placement records were successfully saved.']"));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

		waitForPageToComplete();
		wait(10);
		FilterDropDwon.click();
		wait(2);
		ClearFiltersButton.click();
		wait(2);
		StuNumDropDown.click();
		wait(2);
		StuNumFilter.click();
		wait(2);
		value.clearAndType(data.get("Student Number"));
		wait(2);
		FilterButton.click();
		wait(2);
		ClickStudent.click();
		wait(10);
		waitForPageToLoad();
		CareerServices.waitTillElementClickable();
		CareerServices.click();
		PlacementsIntern.click();
		wait(2);
		ClickNew.waitTillElementFound();
		ClickNew.click();
		wait(3);
		scrollPage(0, 500);
		wait(2);
		ClickEmployer.waitTillElementClickable();
		ClickEmployer.click();
		wait(2);
		EnterEmployer.sendKeys(data.get("Employer"));
		wait(5);
		SelectEmployer.click();
		wait(2);
		Select.waitTillElementClickable();
		Select.click();
		wait(2);
		JobType.waitTillElementFound();
		JobType.clearAndType(data.get("Job Type"));
		wait(2);
		//	PlacementStatus.waitTillElementFound();
		//	PlacementStatus.sendKeys(data.get("Placement Status"));
		JobCategory.click();
		wait(2);
		scrollPage(0, 200);
		wait(2);
		JobTitle.waitTillElementFound();
		JobTitle.clearAndType(data.get("Job Title"));
		wait(2);
		scrollPage(0, 300);
		wait(2);
		FiledOfStudy.waitTillElementFound();
		FiledOfStudy.clearAndType(data.get("Field Of Studeny"));
		wait(2);
		HowPlaced.waitTillElementFound();
		HowPlaced.clearAndType(data.get("How Placed"));
		wait(2);
		SalaryAmount.waitTillElementFound();
		SalaryAmount.clearAndType(data.get("Salary Amount"));
		wait(2);
		SalaryStatus.waitTillElementFound();
		SalaryStatus.clearAndType(data.get("Salary Status"));
		wait(2);
		SalaryType.waitTillElementFound();
		SalaryType.clearAndType(data.get("Salary Type"));
		wait(2);
		DatePlaced.waitTillElementFound();
		DatePlaced.clearAndType(data.get("Date Placed"));
		wait(2);
		StartDate.waitTillElementFound();
		StartDate.clearAndType(data.get("Start Date"));
		wait(2);
		scrollPage(0, -1000);  
		wait(2);
		SaveClose.click();
		wait(10);
		CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
		wait(10);
		return this;
	}

	public StudentCareerServices PlaceGraduateStudentIntoExternship(StringHash data) throws Exception {
		
		Checkbox SelectEmployer = new Checkbox("Click Employer", byXPath("//input[@aria-label='"+data.get("Employer")+"']"));
		Button ClickUserName = new Button("Click UserName", byXPath("//a[.='"+data.get("Employer")+"']"));
		Link ClickStudent = new Link("Click Student Name",byXPath("//span[.='"+data.get("Student Name")+"']"));
		Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Placement records were successfully saved.']"));
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

		waitForPageToComplete();
		wait(10);
		FilterDropDwon.click();
		wait(2);
		ClearFiltersButton.click();
		wait(2);
		StuNumDropDown.click();
		wait(2);
		StuNumFilter.click();
		wait(2);
		value.clearAndType(data.get("Student Number"));
		wait(2);
		FilterButton.click();
		wait(2);
		ClickStudent.click();
		wait(10);
		waitForPageToLoad();
		CareerServices.waitTillElementClickable();
		CareerServices.click();
		wait(2);
		PlacementsIntern.click();
		wait(2);
		ClickNew.waitTillElementFound();
		ClickNew.click();
		wait(3);
		scrollPage(0, 500);
		wait(2);
		ClickEmployer.waitTillElementClickable();
		ClickEmployer.click();
		wait(2);
		EnterEmployer.sendKeys(data.get("Employer"));
		wait(5);
		SelectEmployer.click();
		wait(2);
		Select.waitTillElementClickable();
		Select.click();
		wait(2);
		JobType.waitTillElementFound();
		JobType.clearAndType(data.get("Job Type"));
		wait(2);
		//PlacementStatus.waitTillElementFound();
		//PlacementStatus.sendKeys(data.get("Placement Status"));
		JobCategory.click();
		wait(2);
		scrollPage(0, 200);
		wait(2);
		JobTitle.waitTillElementFound();
		JobTitle.clearAndType(data.get("Job Title"));
		wait(2);
		scrollPage(0, 300);
		wait(2);
		FiledOfStudy.waitTillElementFound();
		FiledOfStudy.clearAndType(data.get("Field Of Studeny"));
		wait(2);
		HowPlaced.waitTillElementFound();
		HowPlaced.clearAndType(data.get("How Placed"));
		wait(2);
		SalaryAmount.waitTillElementFound();
		SalaryAmount.clearAndType(data.get("Salary Amount"));
		wait(2);
		SalaryStatus.waitTillElementFound();
		SalaryStatus.clearAndType(data.get("Salary Status"));
		wait(2);
		SalaryType.waitTillElementFound();
		SalaryType.clearAndType(data.get("Salary Type"));
		wait(2);
		DatePlaced.waitTillElementFound();
		DatePlaced.clearAndType(data.get("Date Placed"));
		wait(2);
		StartDate.waitTillElementFound();
		StartDate.clearAndType(data.get("Start Date"));
		wait(2);
		scrollPage(0, -1000);  
		wait(2);
		SaveClose.click();
		wait(10);
		CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
		wait(10);
		return this;
	}
}


